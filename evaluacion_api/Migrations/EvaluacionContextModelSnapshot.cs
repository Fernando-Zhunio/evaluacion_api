// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using evaluacion_api;

#nullable disable

namespace evaluacion_api.Migrations
{
    [DbContext(typeof(EvaluacionContext))]
    partial class EvaluacionContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("evaluacion_api.Models.ButtonHtml", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Color")
                        .HasColumnType("TEXT");

                    b.Property<int>("FormHtmlId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FormHtmlId");

                    b.ToTable("ButtonHtmls");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FormHtmlId = 1,
                            Label = "Button A"
                        },
                        new
                        {
                            Id = 2,
                            FormHtmlId = 2,
                            Label = "Button B"
                        });
                });

            modelBuilder.Entity("evaluacion_api.Models.FormHtml", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("FormHtml");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Formulario 1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Formulario 2"
                        });
                });

            modelBuilder.Entity("evaluacion_api.Models.InputHtml", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("formHtmlId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("label")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("placeholder")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("type")
                        .HasColumnType("INTEGER");

                    b.Property<string>("value")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("formHtmlId");

                    b.ToTable("InputHtmls");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            formHtmlId = 1,
                            label = "Nombres",
                            name = "name",
                            placeholder = "Ingrese sus nombres",
                            type = 0
                        },
                        new
                        {
                            Id = 2,
                            formHtmlId = 1,
                            label = "Fecha de nacimiento",
                            name = "birthday",
                            placeholder = "Ingrese fecha de nacimiento",
                            type = 2
                        },
                        new
                        {
                            Id = 3,
                            formHtmlId = 1,
                            label = "Estatura",
                            name = "name",
                            placeholder = "Ingrese estatura",
                            type = 1
                        });
                });

            modelBuilder.Entity("evaluacion_api.Models.Option", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("inputHtmlId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("label")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.HasIndex("inputHtmlId");

                    b.ToTable("Option");
                });

            modelBuilder.Entity("evaluacion_api.Models.ButtonHtml", b =>
                {
                    b.HasOne("evaluacion_api.Models.FormHtml", "FormHtml")
                        .WithMany()
                        .HasForeignKey("FormHtmlId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FormHtml");
                });

            modelBuilder.Entity("evaluacion_api.Models.InputHtml", b =>
                {
                    b.HasOne("evaluacion_api.Models.FormHtml", "formHtml")
                        .WithMany()
                        .HasForeignKey("formHtmlId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("formHtml");
                });

            modelBuilder.Entity("evaluacion_api.Models.Option", b =>
                {
                    b.HasOne("evaluacion_api.Models.InputHtml", "inputHtml")
                        .WithMany("options")
                        .HasForeignKey("inputHtmlId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("inputHtml");
                });

            modelBuilder.Entity("evaluacion_api.Models.InputHtml", b =>
                {
                    b.Navigation("options");
                });
#pragma warning restore 612, 618
        }
    }
}
